# 013. 반복문을 사용하여 최대공약수 구하기

# 최대공약수 : 2개의 숫자간의 공통된 약수 중 가장 큰 약수

# 유클리드 호제법으로 최대공약수 구하기
# 조건 01) 2개의 수 a와 b 에서 큰 수를 a라 하고, 작은 수를 b라고 했을 때 a % b 가 0이 될 때까지 반복한다.

def gcd_solve(p, q):
    # 입력 받은 2개의 수 중 큰 수는 a, 작은 수는 b에 대입한다.
    if p > q:
        a = p
        b = q
    else:
        a = q
        b = p

    # b 가 0보다 클 동안 반복한다.
    while b > 0:
        c = b # 기존의 b는 c에 저장
        b = a % b # a를 b로 나눈 나머지를 b에 다시 저장
        a = c # 기존의 b는 a에 저장
    return a
    
if __name__ == "__main__":
    r = gcd_solve(24, 64)
    print("24와 64의 최대공약수 : {}".format(r))